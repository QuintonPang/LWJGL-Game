#version 400 core

//in vec3 color;
in vec2 pass_textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;

out vec4 out_Color;

uniform sampler2D textureSampler;
uniform vec3 lightColor;

void main(void){

	// make sure they are 1 so that it does not affect the dot product
	vec3 unitNormal = normalize(surfaceNormal);
	vec3 unitLightVector = normalize(toLightVector);
	
	float nDot1 = dot(unitNormal,unitLightVector);
	float brightness = max(nDot1,0.0); // changes negative to 0
	vec3 diffuse = brightess * lightColor;
	
	//out_Color = vec4(color,1.0);
	out_Color = vec4(diffuse,1.0) * texture(textureSampler,pass_textureCoords);
}