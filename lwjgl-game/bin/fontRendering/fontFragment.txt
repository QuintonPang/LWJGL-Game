#version 330

in vec2 pass_textureCoords;

out vec4 out_color;

uniform vec3 color;
uniform sampler2D fontAtlas;

const float width = 0.5;
const float edge = 0.1;

// dropshadow
const vec2 offset = vec2(0.003,0.003);

const float borderWidth = 0.7;
const float borderEdge = 0.1;

const vec3 outlineColor = vec3(1.0,0.0,0.0);

// to prevent error when exporting as jar file
float smoothlyStep(float edge0, float edge1, float x){
	float t = clamp((x-edge0) / (edge1 - edge0 ), 0.0, 1.0);
	return t * t * (3.0-2.0*t);
}

void main(void){
	// distance from centre of line
	float distance = 1.0 - texture(fontAtlas, pass_textureCoords).a;
	// transparency
	float alpha = 1.0 - smoothlyStep(width, width+edge, distance);
	
	// distance from centre of line
	float distance2 = 1.0 - texture(fontAtlas, pass_textureCoords+offset).a;
	// transparency
	float outlineAlpha = 1.0 - smoothlyStep(borderWidth, borderWidth+borderEdge, distance2);
	
	float overallAlpha = alpha + (1.0-alpha) * outlineAlpha;
	vec3 overallColor = mix(outlineColor, color, alpha/overallAlpha);
	
	out_color = vec4(overallColor,overallAlpha);
}